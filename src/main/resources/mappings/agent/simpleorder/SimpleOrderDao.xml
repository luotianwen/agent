<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.agent.simpleorder.dao.SimpleOrderDao">
    
	<sql id="simpleOrderColumns">

		g.name AS "agentName",
		a.id AS "id",
		a.agentid AS "agentid",
		a.articleno AS "articleno",
		a.num AS "num",
		a.money AS "money",
		a.price AS "price",
		a.state AS "state",
		a.courier AS "courier",
		a.delivernumber AS "delivernumber",
		a.deliverinfo AS "deliverinfo",
		a.delivermoney AS "delivermoney",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.totalmoney AS "totalmoney",
		a.consignee AS "consignee",
		a.phone AS "phone",
		a.colour AS "colour",
		a.spec AS "spec",
		a.del_flag AS "delFlag",
		a.isaccount AS "isaccount",
		a.address AS "address",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.orderId AS "orderId",
		a.update_by AS "updateBy.id"
	</sql>
	
	<sql id="simpleOrderJoins">
		LEFT join a_agent g on g.id=a.agentid
	</sql>
    
	<select id="get" resultType="SimpleOrder">
		SELECT 
			<include refid="simpleOrderColumns"/>
		FROM a_simple_order a
		<include refid="simpleOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="sum" resultType="SimpleOrder">
		SELECT
		sum(a.delivermoney) as delivermoney,
		sum(a.totalmoney) as totalmoney,
		sum(a.money) as money
		from a_simple_order a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="articleno != null and articleno != ''">
				AND a.articleno = #{articleno}
			</if>

			<if test="orderId != null and orderId != ''">
				AND a.orderId = #{orderId}
			</if>
			<if test="agentid != null and agentid != ''">
				AND a.agentid = #{agentid}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state}
			</if>

			<if test="consignee != null and consignee != ''">
				AND (a.consignee = #{consignee}
				OR a.deliverinfo  LIKE concat('%',#{consignee},'%'))
			</if>
			<if test="delivernumber != null and delivernumber != ''">
				AND a.delivernumber = #{delivernumber}
			</if>
			<if test="isdelivernumber != null and isdelivernumber != ''">

				<if test="isdelivernumber == 0 ">
					AND (a.delivernumber is null or a.delivernumber='')
				</if>
				<if test="isdelivernumber == 1 ">
					AND (a.delivernumber is not  null and a.delivernumber !='')
				</if>
			</if>
			<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
			<if test="isaccount != null and isaccount != ''">
				AND a.isaccount = #{isaccount}
			</if>
		</where>
	</select>
	<select id="findList" resultType="SimpleOrder">
		SELECT 
			<include refid="simpleOrderColumns"/>
		FROM a_simple_order a
		<include refid="simpleOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="articleno != null and articleno != ''">
				AND a.articleno = #{articleno}
			</if>

			<if test="orderId != null and orderId != ''">
				AND a.orderId = #{orderId}
			</if>
			<if test="agentid != null and agentid != ''">
				AND a.agentid = #{agentid}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state}
			</if>

			<if test="consignee != null and consignee != ''">
				AND (a.consignee = #{consignee}
				OR a.deliverinfo  LIKE concat('%',#{consignee},'%'))
			</if>
			<if test="delivernumber != null and delivernumber != ''">
				AND a.delivernumber = #{delivernumber}
			</if>
            <if test="isdelivernumber != null and isdelivernumber != ''">

                <if test="isdelivernumber == 0 ">
                    AND (a.delivernumber is null or a.delivernumber='')
                </if>
                <if test="isdelivernumber == 1 ">
                    AND (a.delivernumber is not  null and a.delivernumber !='')
                </if>
            </if>
			<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
			<if test="isaccount != null and isaccount != ''">
				AND a.isaccount = #{isaccount}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SimpleOrder">
		SELECT 
			<include refid="simpleOrderColumns"/>
		FROM a_simple_order a
		<include refid="simpleOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="articleno != null and articleno != ''">
				AND a.articleno = #{articleno}
			</if>
			<if test="agentid != null and agentid != ''">
				AND a.agentid = #{agentid}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state}
			</if>
			<if test="delivernumber != null and delivernumber != ''">
				AND a.delivernumber = #{delivernumber}
			</if>
			<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
			<if test="isaccount != null and isaccount != ''">
				AND a.isaccount = #{isaccount}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO a_simple_order(
			id,
			agentid,
			articleno,
			num,
			money,
			price,
			state,
			courier,
			delivernumber,
			deliverinfo,
			delivermoney,
			create_by,
			create_date,
			totalmoney,
			update_by,
			isaccount,
			consignee,
			phone,
			colour,
			spec,
			address,
			remarks,
			del_flag,
			orderId
		) VALUES (
			#{id},
			#{agentid},
			#{articleno},
			#{num},
			#{money},
			#{price},
			#{state},
			#{courier},
			#{delivernumber},
			#{deliverinfo},
			#{delivermoney},
			#{createBy.id},
			#{createDate},
			#{totalmoney},
			#{updateBy.id},
			#{isaccount},
			#{consignee},
			#{phone},
			#{colour},
			#{spec},
			#{address},
			#{remarks},
			#{delFlag},
			#{orderId}
		)
	</insert>
	
	<update id="update">
		UPDATE a_simple_order SET 	
			agentid = #{agentid},
			articleno = #{articleno},
			num = #{num},
			money = #{money},
			price = #{price},
			state = #{state},
			courier = #{courier},
			delivernumber = #{delivernumber},
			deliverinfo = #{deliverinfo},
			delivermoney = #{delivermoney},
			totalmoney = #{totalmoney},
			update_by = #{updateBy.id},
			isaccount = #{isaccount},
			consignee = #{consignee},
			phone = #{phone},
			colour = #{colour},
			spec = #{spec},
			address = #{address},

			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	<select id="getOrderIdDeliver" resultType="SimpleOrder">

		SELECT
		 a.id AS "id",
		 a.agentid,
		a.money AS "money",
		a.courier AS "courier",
		a.delivernumber AS "delivernumber",
		a.delivermoney AS "delivermoney",
		a.orderId AS "orderId"

		from a_simple_order a
		where   a.state=3
		<![CDATA[
		   AND (a.orderId is not null or a.orderId <> '')
		]]>
		  AND (a.delivernumber is null or a.delivernumber='')


	</select>

	<update id="deliver">
		UPDATE a_simple_order SET
		state = #{state},
		courier = #{courier},
		delivernumber = #{delivernumber},
		deliverinfo = #{deliverinfo},
		delivermoney = #{delivermoney},
		totalmoney = #{totalmoney},

		update_by = #{updateBy.id},
		update_date = #{updateDate}
		WHERE id = #{id}
		and state='1'
	</update>
	<update id="Tmdeliver">
		UPDATE a_simple_order SET

		courier = #{courier},
		delivernumber = #{delivernumber},
		delivermoney = #{delivermoney},
		totalmoney = #{totalmoney}

		WHERE id = #{id}

	</update>
	<update id="delete">
		UPDATE a_simple_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="isaccount">
		UPDATE a_simple_order SET
		isaccount = '1'
		WHERE id = #{id}
		and isaccount = '0'
	</update>
	<update id="account">
		UPDATE a_simple_order SET
		isaccount = '1'
		WHERE id in
		        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			              #{item}
			     </foreach>
		and isaccount = '0'
		and state=3
	</update>

</mapper>