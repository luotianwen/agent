<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.agent.simpleorder.dao.SimpleOrderAfterDao">
    
	<sql id="simpleOrderAfterColumns">
 		a.no AS "no",
		a.id AS "id",
		a.orderid AS "orderId",
		a.articleno AS "articleno",
		a.address AS "address",
		a.consignee AS "consignee",
		a.phone AS "phone",
		a.state AS "state",
		a.backaddress AS "backaddress",
		a.backcourier AS "backcourier",
		a.backnumber AS "backnumber",
		a.courier AS "courier",
		a.delivernumber AS "delivernumber",
		a.backmoney AS "backmoney",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.afterstate AS "afterstate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="simpleOrderAfterJoins">
		left join a_simple_order o on o.orderid=a.orderid
	</sql>
    
	<select id="get" resultType="SimpleOrderAfter">
		SELECT 
			<include refid="simpleOrderAfterColumns"/>
		FROM a_simple_order_after a
		<include refid="simpleOrderAfterJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SimpleOrderAfter">
		SELECT 
			<include refid="simpleOrderAfterColumns"/>
		FROM a_simple_order_after a
		<include refid="simpleOrderAfterJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="orderId != null and orderId != ''">
				AND a.orderid = #{orderId}
			</if>
			<if test="consignee != null and consignee != ''">
				AND a.consignee = #{consignee}
			</if>
			<if test="afterstate != null and afterstate != ''">
				AND a.afterstate = #{afterstate}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state}
			</if>
			<if test="changestate != null and changestate != ''">
				<if test="changestate == 0 ">
					AND (a.backnumber is null or a.backnumber='')

				</if>
				<if test="changestate == 1 ">
					AND (a.backnumber is not  null and a.backnumber !='')
				</if>
			</if>
            <if test="backstate != null and backstate != ''">
				<if test="backstate == 0 ">
					AND (a.delivernumber is null or a.delivernumber='')
				</if>
				<if test="backstate == 1 ">
					AND (a.delivernumber is not  null and a.delivernumber !='')

				</if>

            </if>

			<if test="backnumber != null and backnumber != ''">
				AND a.backnumber = #{backnumber}
			</if>
			<if test="delivernumber != null and delivernumber != ''">
				AND a.delivernumber = #{delivernumber}
			</if>
			<if test="agent != null and agent != ''">
				AND o.agentid = #{agent}
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SimpleOrderAfter">
		SELECT 
			<include refid="simpleOrderAfterColumns"/>
		FROM a_simple_order_after a
		<include refid="simpleOrderAfterJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO a_simple_order_after(
			id,
			orderid,
			articleno,
			address,
			consignee,
			phone,
			state,
			backaddress,
			backcourier,
			backnumber,
			courier,
			delivernumber,
			backmoney,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{orderId},
			#{articleno},
			#{address},
			#{consignee},
			#{phone},
			#{state},
			#{backaddress},
			#{backcourier},
			#{backnumber},
			#{courier},
			#{delivernumber},
			#{backmoney},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE a_simple_order_after SET 	
			orderid = #{orderId},
			articleno = #{articleno},
			address = #{address},
			consignee = #{consignee},
			phone = #{phone},
			state = #{state},
			backaddress = #{backaddress},
			backcourier = #{backcourier},
			backnumber = #{backnumber},
			courier = #{courier},
			afterstate=#{afterstate},
			delivernumber = #{delivernumber},
			backmoney = #{backmoney},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE a_simple_order_after SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="backaddress">
		UPDATE a_simple_order_after SET
			backaddress = #{backaddress}
		WHERE id = #{id}
	</update>
	<update id="backcourier">
		UPDATE a_simple_order_after SET
			backcourier = #{backcourier},
			backnumber = #{backnumber},
			backmoney = #{backmoney},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	<update id="courier">
		UPDATE a_simple_order_after SET
			 courier = #{courier},
			delivernumber = #{delivernumber},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>

</mapper>